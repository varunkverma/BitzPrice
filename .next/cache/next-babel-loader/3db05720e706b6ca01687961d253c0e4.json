{"ast":null,"code":"var _jsxFileName = \"F:\\\\In Progress\\\\NextJS\\\\Projects\\\\BitzPrice\\\\components\\\\prices\\\\prices.component.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\n\nconst Prices = props => {\n  const {\n    0: currency,\n    1: setCurrency\n  } = useState(\"USD\");\n\n  const handleOnChange = e => {\n    setCurrency(e.target.value.toString());\n  }; //console.log(props);\n\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, console.log(props.bpi[currency]), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), __jsx(\"select\", {\n    value: currency,\n    onChange: handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"EUR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"EUR: European\"), __jsx(\"option\", {\n    value: \"GRP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"GBP: British\"), __jsx(\"option\", {\n    value: \"USD\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"USD: American Dollar\")));\n};\n\nexport default Prices;","map":{"version":3,"sources":["F:/In Progress/NextJS/Projects/BitzPrice/components/prices/prices.component.jsx"],"names":["useState","Prices","props","currency","setCurrency","handleOnChange","e","target","value","toString","console","log","bpi"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BJ,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMK,cAAc,GAAGC,CAAC,IAAI;AAC1BF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,QAAf,EAAD,CAAX;AACD,GAFD,CAHsB,CAMtB;;;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGC,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,GAAN,CAAUT,QAAV,CAAZ,CAVH,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE;AAAQ,IAAA,KAAK,EAAEA,QAAf;AAAyB,IAAA,QAAQ,EAAEE,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,CAZF,CADF;AAoBD,CA3BD;;AA6BA,eAAeJ,MAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Prices = props => {\r\n  const [currency, setCurrency] = useState(\"USD\");\r\n\r\n  const handleOnChange = e => {\r\n    setCurrency(e.target.value.toString());\r\n  };\r\n  //console.log(props);\r\n  return (\r\n    <div>\r\n      {/*<ul className=\"list-group\">\r\n        <li className=\"list-group-item\">\r\n          Bitcoin rate for {props.bpi[currency].description}:{\" \"}\r\n          <span className=\"badge badge-primary\">\r\n            {props.bpi[currency].code}\r\n          </span>{\" \"}\r\n          <strong>{props.bpi[currency].rate}</strong>\r\n  </li>\r\n      </ul>*/}\r\n      {console.log(props.bpi[currency])}\r\n      <br />\r\n      <select value={currency} onChange={handleOnChange}>\r\n        <option value=\"EUR\">EUR: European</option>\r\n        <option value=\"GRP\">GBP: British</option>\r\n        <option value=\"USD\">USD: American Dollar</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prices;\r\n"]},"metadata":{},"sourceType":"module"}